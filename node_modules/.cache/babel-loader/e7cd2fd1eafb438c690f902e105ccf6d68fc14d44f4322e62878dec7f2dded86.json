{"ast":null,"code":"\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Field, FieldContext, ListContext } from 'rc-field-form';\nimport useState from \"rc-util/es/hooks/useState\";\nimport { supportRef } from \"rc-util/es/ref\";\nimport { cloneElement, isValidElement } from '../../_util/reactNode';\nimport { devUseWarning } from '../../_util/warning';\nimport { ConfigContext } from '../../config-provider';\nimport { FormContext, NoStyleItemContext } from '../context';\nimport useChildren from '../hooks/useChildren';\nimport useFormItemStatus from '../hooks/useFormItemStatus';\nimport useFrameState from '../hooks/useFrameState';\nimport useItemRef from '../hooks/useItemRef';\nimport useStyle from '../style';\nimport { getFieldId, toArray } from '../util';\nimport ItemHolder from './ItemHolder';\nimport StatusProvider from './StatusProvider';\nimport useCSSVarCls from '../../config-provider/hooks/useCSSVarCls';\nconst NAME_SPLIT = '__SPLIT__';\nconst ValidateStatuses = ['success', 'warning', 'error', 'validating', ''];\nconst MemoInput = /*#__PURE__*/React.memo(_ref => {\n  let {\n    children\n  } = _ref;\n  return children;\n}, (prev, next) => prev.value === next.value && prev.update === next.update && prev.childProps.length === next.childProps.length && prev.childProps.every((value, index) => value === next.childProps[index]));\nfunction genEmptyMeta() {\n  return {\n    errors: [],\n    warnings: [],\n    touched: false,\n    validating: false,\n    name: [],\n    validated: false\n  };\n}\nfunction InternalFormItem(props) {\n  const {\n    name,\n    noStyle,\n    className,\n    dependencies,\n    prefixCls: customizePrefixCls,\n    shouldUpdate,\n    rules,\n    children,\n    required,\n    label,\n    messageVariables,\n    trigger = 'onChange',\n    validateTrigger,\n    hidden,\n    help\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const {\n    name: formName\n  } = React.useContext(FormContext);\n  const mergedChildren = useChildren(children);\n  const isRenderProps = typeof mergedChildren === 'function';\n  const notifyParentMetaChange = React.useContext(NoStyleItemContext);\n  const {\n    validateTrigger: contextValidateTrigger\n  } = React.useContext(FieldContext);\n  const mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : contextValidateTrigger;\n  const hasName = !(name === undefined || name === null);\n  const prefixCls = getPrefixCls('form', customizePrefixCls);\n  // Style\n  const cssVarCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId] = useStyle(prefixCls, cssVarCls);\n  // ========================= Warn =========================\n  const warning = devUseWarning('Form.Item');\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(name !== null, 'usage', '`null` is passed as `name` property') : void 0;\n  }\n  // ========================= MISC =========================\n  // Get `noStyle` required info\n  const listContext = React.useContext(ListContext);\n  const fieldKeyPathRef = React.useRef();\n  // ======================== Errors ========================\n  // >>>>> Collect sub field errors\n  const [subFieldErrors, setSubFieldErrors] = useFrameState({});\n  // >>>>> Current field errors\n  const [meta, setMeta] = useState(() => genEmptyMeta());\n  const onMetaChange = nextMeta => {\n    // This keyInfo is not correct when field is removed\n    // Since origin keyManager no longer keep the origin key anymore\n    // Which means we need cache origin one and reuse when removed\n    const keyInfo = listContext === null || listContext === void 0 ? void 0 : listContext.getKey(nextMeta.name);\n    // Destroy will reset all the meta\n    setMeta(nextMeta.destroy ? genEmptyMeta() : nextMeta, true);\n    // Bump to parent since noStyle\n    if (noStyle && help !== false && notifyParentMetaChange) {\n      let namePath = nextMeta.name;\n      if (!nextMeta.destroy) {\n        if (keyInfo !== undefined) {\n          const [fieldKey, restPath] = keyInfo;\n          namePath = [fieldKey].concat(_toConsumableArray(restPath));\n          fieldKeyPathRef.current = namePath;\n        }\n      } else {\n        // Use origin cache data\n        namePath = fieldKeyPathRef.current || namePath;\n      }\n      notifyParentMetaChange(nextMeta, namePath);\n    }\n  };\n  // >>>>> Collect noStyle Field error to the top FormItem\n  const onSubItemMetaChange = (subMeta, uniqueKeys) => {\n    // Only `noStyle` sub item will trigger\n    setSubFieldErrors(prevSubFieldErrors => {\n      const clone = Object.assign({}, prevSubFieldErrors);\n      // name: ['user', 1] + key: [4] = ['user', 4]\n      const mergedNamePath = [].concat(_toConsumableArray(subMeta.name.slice(0, -1)), _toConsumableArray(uniqueKeys));\n      const mergedNameKey = mergedNamePath.join(NAME_SPLIT);\n      if (subMeta.destroy) {\n        // Remove\n        delete clone[mergedNameKey];\n      } else {\n        // Update\n        clone[mergedNameKey] = subMeta;\n      }\n      return clone;\n    });\n  };\n  // >>>>> Get merged errors\n  const [mergedErrors, mergedWarnings] = React.useMemo(() => {\n    const errorList = _toConsumableArray(meta.errors);\n    const warningList = _toConsumableArray(meta.warnings);\n    Object.values(subFieldErrors).forEach(subFieldError => {\n      errorList.push.apply(errorList, _toConsumableArray(subFieldError.errors || []));\n      warningList.push.apply(warningList, _toConsumableArray(subFieldError.warnings || []));\n    });\n    return [errorList, warningList];\n  }, [subFieldErrors, meta.errors, meta.warnings]);\n  // ===================== Children Ref =====================\n  const getItemRef = useItemRef();\n  // ======================== Render ========================\n  function renderLayout(baseChildren, fieldId, isRequired) {\n    if (noStyle && !hidden) {\n      return /*#__PURE__*/React.createElement(StatusProvider, {\n        prefixCls: prefixCls,\n        hasFeedback: props.hasFeedback,\n        validateStatus: props.validateStatus,\n        meta: meta,\n        errors: mergedErrors,\n        warnings: mergedWarnings,\n        noStyle: true\n      }, baseChildren);\n    }\n    return /*#__PURE__*/React.createElement(ItemHolder, Object.assign({\n      key: \"row\"\n    }, props, {\n      className: classNames(className, cssVarCls, hashId),\n      prefixCls: prefixCls,\n      fieldId: fieldId,\n      isRequired: isRequired,\n      errors: mergedErrors,\n      warnings: mergedWarnings,\n      meta: meta,\n      onSubItemMetaChange: onSubItemMetaChange\n    }), baseChildren);\n  }\n  if (!hasName && !isRenderProps && !dependencies) {\n    return wrapCSSVar(renderLayout(mergedChildren));\n  }\n  let variables = {};\n  if (typeof label === 'string') {\n    variables.label = label;\n  } else if (name) {\n    variables.label = String(name);\n  }\n  if (messageVariables) {\n    variables = Object.assign(Object.assign({}, variables), messageVariables);\n  }\n  // >>>>> With Field\n  return wrapCSSVar( /*#__PURE__*/React.createElement(Field, Object.assign({}, props, {\n    messageVariables: variables,\n    trigger: trigger,\n    validateTrigger: mergedValidateTrigger,\n    onMetaChange: onMetaChange\n  }), (control, renderMeta, context) => {\n    const mergedName = toArray(name).length && renderMeta ? renderMeta.name : [];\n    const fieldId = getFieldId(mergedName, formName);\n    const isRequired = required !== undefined ? required : !!(rules && rules.some(rule => {\n      if (rule && typeof rule === 'object' && rule.required && !rule.warningOnly) {\n        return true;\n      }\n      if (typeof rule === 'function') {\n        const ruleEntity = rule(context);\n        return ruleEntity && ruleEntity.required && !ruleEntity.warningOnly;\n      }\n      return false;\n    }));\n    // ======================= Children =======================\n    const mergedControl = Object.assign({}, control);\n    let childNode = null;\n    process.env.NODE_ENV !== \"production\" ? warning(!(shouldUpdate && dependencies), 'usage', \"`shouldUpdate` and `dependencies` shouldn't be used together. See https://u.ant.design/form-deps.\") : void 0;\n    if (Array.isArray(mergedChildren) && hasName) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'usage', 'A `Form.Item` with a `name` prop must have a single child element. For information on how to render more complex form items, see https://u.ant.design/complex-form-item.') : void 0;\n      childNode = mergedChildren;\n    } else if (isRenderProps && (!(shouldUpdate || dependencies) || hasName)) {\n      process.env.NODE_ENV !== \"production\" ? warning(!!(shouldUpdate || dependencies), 'usage', 'A `Form.Item` with a render function must have either `shouldUpdate` or `dependencies`.') : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(!hasName, 'usage', 'A `Form.Item` with a render function cannot be a field, and thus cannot have a `name` prop.') : void 0;\n    } else if (dependencies && !isRenderProps && !hasName) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'usage', 'Must set `name` or use a render function when `dependencies` is set.') : void 0;\n    } else if (isValidElement(mergedChildren)) {\n      process.env.NODE_ENV !== \"production\" ? warning(mergedChildren.props.defaultValue === undefined, 'usage', '`defaultValue` will not work on controlled Field. You should use `initialValues` of Form instead.') : void 0;\n      const childProps = Object.assign(Object.assign({}, mergedChildren.props), mergedControl);\n      if (!childProps.id) {\n        childProps.id = fieldId;\n      }\n      if (help || mergedErrors.length > 0 || mergedWarnings.length > 0 || props.extra) {\n        const describedbyArr = [];\n        if (help || mergedErrors.length > 0) {\n          describedbyArr.push(`${fieldId}_help`);\n        }\n        if (props.extra) {\n          describedbyArr.push(`${fieldId}_extra`);\n        }\n        childProps['aria-describedby'] = describedbyArr.join(' ');\n      }\n      if (mergedErrors.length > 0) {\n        childProps['aria-invalid'] = 'true';\n      }\n      if (isRequired) {\n        childProps['aria-required'] = 'true';\n      }\n      if (supportRef(mergedChildren)) {\n        childProps.ref = getItemRef(mergedName, mergedChildren);\n      }\n      // We should keep user origin event handler\n      const triggers = new Set([].concat(_toConsumableArray(toArray(trigger)), _toConsumableArray(toArray(mergedValidateTrigger))));\n      triggers.forEach(eventName => {\n        childProps[eventName] = function () {\n          var _a2, _c2;\n          var _a, _b, _c;\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          (_a = mergedControl[eventName]) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [mergedControl].concat(args));\n          (_c = (_b = mergedChildren.props)[eventName]) === null || _c === void 0 ? void 0 : (_c2 = _c).call.apply(_c2, [_b].concat(args));\n        };\n      });\n      // List of props that need to be watched for changes -> if changes are detected in MemoInput -> rerender\n      const watchingChildProps = [childProps['aria-required'], childProps['aria-invalid'], childProps['aria-describedby']];\n      childNode = /*#__PURE__*/React.createElement(MemoInput, {\n        value: mergedControl[props.valuePropName || 'value'],\n        update: mergedChildren,\n        childProps: watchingChildProps\n      }, cloneElement(mergedChildren, childProps));\n    } else if (isRenderProps && (shouldUpdate || dependencies) && !hasName) {\n      childNode = mergedChildren(context);\n    } else {\n      process.env.NODE_ENV !== \"production\" ? warning(!mergedName.length, 'usage', '`name` is only used for validate React element. If you are using Form.Item as layout display, please remove `name` instead.') : void 0;\n      childNode = mergedChildren;\n    }\n    return renderLayout(childNode, fieldId, isRequired);\n  }));\n}\nconst FormItem = InternalFormItem;\nFormItem.useStatus = useFormItemStatus;\nexport default FormItem;","map":{"version":3,"names":["_toConsumableArray","React","classNames","Field","FieldContext","ListContext","useState","supportRef","cloneElement","isValidElement","devUseWarning","ConfigContext","FormContext","NoStyleItemContext","useChildren","useFormItemStatus","useFrameState","useItemRef","useStyle","getFieldId","toArray","ItemHolder","StatusProvider","useCSSVarCls","NAME_SPLIT","ValidateStatuses","MemoInput","memo","_ref","children","prev","next","value","update","childProps","length","every","index","genEmptyMeta","errors","warnings","touched","validating","name","validated","InternalFormItem","props","noStyle","className","dependencies","prefixCls","customizePrefixCls","shouldUpdate","rules","required","label","messageVariables","trigger","validateTrigger","hidden","help","getPrefixCls","useContext","formName","mergedChildren","isRenderProps","notifyParentMetaChange","contextValidateTrigger","mergedValidateTrigger","undefined","hasName","cssVarCls","wrapCSSVar","hashId","warning","process","env","NODE_ENV","listContext","fieldKeyPathRef","useRef","subFieldErrors","setSubFieldErrors","meta","setMeta","onMetaChange","nextMeta","keyInfo","getKey","destroy","namePath","fieldKey","restPath","concat","current","onSubItemMetaChange","subMeta","uniqueKeys","prevSubFieldErrors","clone","Object","assign","mergedNamePath","slice","mergedNameKey","join","mergedErrors","mergedWarnings","useMemo","errorList","warningList","values","forEach","subFieldError","push","apply","getItemRef","renderLayout","baseChildren","fieldId","isRequired","createElement","hasFeedback","validateStatus","key","variables","String","control","renderMeta","context","mergedName","some","rule","warningOnly","ruleEntity","mergedControl","childNode","Array","isArray","defaultValue","id","extra","describedbyArr","ref","triggers","Set","eventName","_a2","_c2","_a","_b","_c","_len","arguments","args","_key","call","watchingChildProps","valuePropName","FormItem","useStatus"],"sources":["/Users/ns/Documents/code/Constructor/sections-manager/node_modules/antd/es/form/FormItem/index.js"],"sourcesContent":["\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Field, FieldContext, ListContext } from 'rc-field-form';\nimport useState from \"rc-util/es/hooks/useState\";\nimport { supportRef } from \"rc-util/es/ref\";\nimport { cloneElement, isValidElement } from '../../_util/reactNode';\nimport { devUseWarning } from '../../_util/warning';\nimport { ConfigContext } from '../../config-provider';\nimport { FormContext, NoStyleItemContext } from '../context';\nimport useChildren from '../hooks/useChildren';\nimport useFormItemStatus from '../hooks/useFormItemStatus';\nimport useFrameState from '../hooks/useFrameState';\nimport useItemRef from '../hooks/useItemRef';\nimport useStyle from '../style';\nimport { getFieldId, toArray } from '../util';\nimport ItemHolder from './ItemHolder';\nimport StatusProvider from './StatusProvider';\nimport useCSSVarCls from '../../config-provider/hooks/useCSSVarCls';\nconst NAME_SPLIT = '__SPLIT__';\nconst ValidateStatuses = ['success', 'warning', 'error', 'validating', ''];\nconst MemoInput = /*#__PURE__*/React.memo(_ref => {\n  let {\n    children\n  } = _ref;\n  return children;\n}, (prev, next) => prev.value === next.value && prev.update === next.update && prev.childProps.length === next.childProps.length && prev.childProps.every((value, index) => value === next.childProps[index]));\nfunction genEmptyMeta() {\n  return {\n    errors: [],\n    warnings: [],\n    touched: false,\n    validating: false,\n    name: [],\n    validated: false\n  };\n}\nfunction InternalFormItem(props) {\n  const {\n    name,\n    noStyle,\n    className,\n    dependencies,\n    prefixCls: customizePrefixCls,\n    shouldUpdate,\n    rules,\n    children,\n    required,\n    label,\n    messageVariables,\n    trigger = 'onChange',\n    validateTrigger,\n    hidden,\n    help\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const {\n    name: formName\n  } = React.useContext(FormContext);\n  const mergedChildren = useChildren(children);\n  const isRenderProps = typeof mergedChildren === 'function';\n  const notifyParentMetaChange = React.useContext(NoStyleItemContext);\n  const {\n    validateTrigger: contextValidateTrigger\n  } = React.useContext(FieldContext);\n  const mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : contextValidateTrigger;\n  const hasName = !(name === undefined || name === null);\n  const prefixCls = getPrefixCls('form', customizePrefixCls);\n  // Style\n  const cssVarCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId] = useStyle(prefixCls, cssVarCls);\n  // ========================= Warn =========================\n  const warning = devUseWarning('Form.Item');\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(name !== null, 'usage', '`null` is passed as `name` property') : void 0;\n  }\n  // ========================= MISC =========================\n  // Get `noStyle` required info\n  const listContext = React.useContext(ListContext);\n  const fieldKeyPathRef = React.useRef();\n  // ======================== Errors ========================\n  // >>>>> Collect sub field errors\n  const [subFieldErrors, setSubFieldErrors] = useFrameState({});\n  // >>>>> Current field errors\n  const [meta, setMeta] = useState(() => genEmptyMeta());\n  const onMetaChange = nextMeta => {\n    // This keyInfo is not correct when field is removed\n    // Since origin keyManager no longer keep the origin key anymore\n    // Which means we need cache origin one and reuse when removed\n    const keyInfo = listContext === null || listContext === void 0 ? void 0 : listContext.getKey(nextMeta.name);\n    // Destroy will reset all the meta\n    setMeta(nextMeta.destroy ? genEmptyMeta() : nextMeta, true);\n    // Bump to parent since noStyle\n    if (noStyle && help !== false && notifyParentMetaChange) {\n      let namePath = nextMeta.name;\n      if (!nextMeta.destroy) {\n        if (keyInfo !== undefined) {\n          const [fieldKey, restPath] = keyInfo;\n          namePath = [fieldKey].concat(_toConsumableArray(restPath));\n          fieldKeyPathRef.current = namePath;\n        }\n      } else {\n        // Use origin cache data\n        namePath = fieldKeyPathRef.current || namePath;\n      }\n      notifyParentMetaChange(nextMeta, namePath);\n    }\n  };\n  // >>>>> Collect noStyle Field error to the top FormItem\n  const onSubItemMetaChange = (subMeta, uniqueKeys) => {\n    // Only `noStyle` sub item will trigger\n    setSubFieldErrors(prevSubFieldErrors => {\n      const clone = Object.assign({}, prevSubFieldErrors);\n      // name: ['user', 1] + key: [4] = ['user', 4]\n      const mergedNamePath = [].concat(_toConsumableArray(subMeta.name.slice(0, -1)), _toConsumableArray(uniqueKeys));\n      const mergedNameKey = mergedNamePath.join(NAME_SPLIT);\n      if (subMeta.destroy) {\n        // Remove\n        delete clone[mergedNameKey];\n      } else {\n        // Update\n        clone[mergedNameKey] = subMeta;\n      }\n      return clone;\n    });\n  };\n  // >>>>> Get merged errors\n  const [mergedErrors, mergedWarnings] = React.useMemo(() => {\n    const errorList = _toConsumableArray(meta.errors);\n    const warningList = _toConsumableArray(meta.warnings);\n    Object.values(subFieldErrors).forEach(subFieldError => {\n      errorList.push.apply(errorList, _toConsumableArray(subFieldError.errors || []));\n      warningList.push.apply(warningList, _toConsumableArray(subFieldError.warnings || []));\n    });\n    return [errorList, warningList];\n  }, [subFieldErrors, meta.errors, meta.warnings]);\n  // ===================== Children Ref =====================\n  const getItemRef = useItemRef();\n  // ======================== Render ========================\n  function renderLayout(baseChildren, fieldId, isRequired) {\n    if (noStyle && !hidden) {\n      return /*#__PURE__*/React.createElement(StatusProvider, {\n        prefixCls: prefixCls,\n        hasFeedback: props.hasFeedback,\n        validateStatus: props.validateStatus,\n        meta: meta,\n        errors: mergedErrors,\n        warnings: mergedWarnings,\n        noStyle: true\n      }, baseChildren);\n    }\n    return /*#__PURE__*/React.createElement(ItemHolder, Object.assign({\n      key: \"row\"\n    }, props, {\n      className: classNames(className, cssVarCls, hashId),\n      prefixCls: prefixCls,\n      fieldId: fieldId,\n      isRequired: isRequired,\n      errors: mergedErrors,\n      warnings: mergedWarnings,\n      meta: meta,\n      onSubItemMetaChange: onSubItemMetaChange\n    }), baseChildren);\n  }\n  if (!hasName && !isRenderProps && !dependencies) {\n    return wrapCSSVar(renderLayout(mergedChildren));\n  }\n  let variables = {};\n  if (typeof label === 'string') {\n    variables.label = label;\n  } else if (name) {\n    variables.label = String(name);\n  }\n  if (messageVariables) {\n    variables = Object.assign(Object.assign({}, variables), messageVariables);\n  }\n  // >>>>> With Field\n  return wrapCSSVar( /*#__PURE__*/React.createElement(Field, Object.assign({}, props, {\n    messageVariables: variables,\n    trigger: trigger,\n    validateTrigger: mergedValidateTrigger,\n    onMetaChange: onMetaChange\n  }), (control, renderMeta, context) => {\n    const mergedName = toArray(name).length && renderMeta ? renderMeta.name : [];\n    const fieldId = getFieldId(mergedName, formName);\n    const isRequired = required !== undefined ? required : !!(rules && rules.some(rule => {\n      if (rule && typeof rule === 'object' && rule.required && !rule.warningOnly) {\n        return true;\n      }\n      if (typeof rule === 'function') {\n        const ruleEntity = rule(context);\n        return ruleEntity && ruleEntity.required && !ruleEntity.warningOnly;\n      }\n      return false;\n    }));\n    // ======================= Children =======================\n    const mergedControl = Object.assign({}, control);\n    let childNode = null;\n    process.env.NODE_ENV !== \"production\" ? warning(!(shouldUpdate && dependencies), 'usage', \"`shouldUpdate` and `dependencies` shouldn't be used together. See https://u.ant.design/form-deps.\") : void 0;\n    if (Array.isArray(mergedChildren) && hasName) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'usage', 'A `Form.Item` with a `name` prop must have a single child element. For information on how to render more complex form items, see https://u.ant.design/complex-form-item.') : void 0;\n      childNode = mergedChildren;\n    } else if (isRenderProps && (!(shouldUpdate || dependencies) || hasName)) {\n      process.env.NODE_ENV !== \"production\" ? warning(!!(shouldUpdate || dependencies), 'usage', 'A `Form.Item` with a render function must have either `shouldUpdate` or `dependencies`.') : void 0;\n      process.env.NODE_ENV !== \"production\" ? warning(!hasName, 'usage', 'A `Form.Item` with a render function cannot be a field, and thus cannot have a `name` prop.') : void 0;\n    } else if (dependencies && !isRenderProps && !hasName) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'usage', 'Must set `name` or use a render function when `dependencies` is set.') : void 0;\n    } else if (isValidElement(mergedChildren)) {\n      process.env.NODE_ENV !== \"production\" ? warning(mergedChildren.props.defaultValue === undefined, 'usage', '`defaultValue` will not work on controlled Field. You should use `initialValues` of Form instead.') : void 0;\n      const childProps = Object.assign(Object.assign({}, mergedChildren.props), mergedControl);\n      if (!childProps.id) {\n        childProps.id = fieldId;\n      }\n      if (help || mergedErrors.length > 0 || mergedWarnings.length > 0 || props.extra) {\n        const describedbyArr = [];\n        if (help || mergedErrors.length > 0) {\n          describedbyArr.push(`${fieldId}_help`);\n        }\n        if (props.extra) {\n          describedbyArr.push(`${fieldId}_extra`);\n        }\n        childProps['aria-describedby'] = describedbyArr.join(' ');\n      }\n      if (mergedErrors.length > 0) {\n        childProps['aria-invalid'] = 'true';\n      }\n      if (isRequired) {\n        childProps['aria-required'] = 'true';\n      }\n      if (supportRef(mergedChildren)) {\n        childProps.ref = getItemRef(mergedName, mergedChildren);\n      }\n      // We should keep user origin event handler\n      const triggers = new Set([].concat(_toConsumableArray(toArray(trigger)), _toConsumableArray(toArray(mergedValidateTrigger))));\n      triggers.forEach(eventName => {\n        childProps[eventName] = function () {\n          var _a2, _c2;\n          var _a, _b, _c;\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          (_a = mergedControl[eventName]) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [mergedControl].concat(args));\n          (_c = (_b = mergedChildren.props)[eventName]) === null || _c === void 0 ? void 0 : (_c2 = _c).call.apply(_c2, [_b].concat(args));\n        };\n      });\n      // List of props that need to be watched for changes -> if changes are detected in MemoInput -> rerender\n      const watchingChildProps = [childProps['aria-required'], childProps['aria-invalid'], childProps['aria-describedby']];\n      childNode = /*#__PURE__*/React.createElement(MemoInput, {\n        value: mergedControl[props.valuePropName || 'value'],\n        update: mergedChildren,\n        childProps: watchingChildProps\n      }, cloneElement(mergedChildren, childProps));\n    } else if (isRenderProps && (shouldUpdate || dependencies) && !hasName) {\n      childNode = mergedChildren(context);\n    } else {\n      process.env.NODE_ENV !== \"production\" ? warning(!mergedName.length, 'usage', '`name` is only used for validate React element. If you are using Form.Item as layout display, please remove `name` instead.') : void 0;\n      childNode = mergedChildren;\n    }\n    return renderLayout(childNode, fieldId, isRequired);\n  }));\n}\nconst FormItem = InternalFormItem;\nFormItem.useStatus = useFormItemStatus;\nexport default FormItem;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}