{"ast":null,"code":"var _jsxFileName = \"/Users/ns/Documents/code/Constructor/sections-manager/src/ConstructorRowEl/ConstructorRowEl.jsx\",\n  _s = $RefreshSig$();\nimport './ConstructorRowEl.scss';\nimport { PlusCircleOutlined, MinusCircleOutlined, SettingOutlined } from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConstructorRowEl = ({\n  row\n}) => {\n  _s();\n  const [columns, setColumns] = useState(1);\n  const idGen = (r, c) => {\n    return String(r) + String(c);\n  };\n  const [layout, setLayout] = useState({\n    1: {\n      id: idGen(row + 1, 1),\n      x: columns - 1,\n      y: row,\n      w: 1,\n      h: 1\n    }\n  });\n  const [gridLayoutStyle, setGridLayoutStyle] = useState({\n    gridTemplateColumns: '1fr'\n  });\n  useEffect(() => {\n    const gridStyle = {\n      gridTemplateColumns: Object.values(layout).map(el => {\n        if (el.w) {\n          return String(el.w) + 'fr';\n        } else {\n          return '';\n        }\n      }).join(' ')\n    };\n    setGridLayoutStyle(gridStyle);\n    console.log(layout);\n  }, [columns, layout]);\n  const handleLayoutX = (e, i) => {\n    setLayout(layout => {\n      const newValue = {\n        ...layout[i],\n        w: Ne.target.value,\n        h: 1\n      };\n      return {\n        ...layout,\n        [i]: newValue\n      };\n    });\n  };\n  const renderColumns = () => {\n    let columnsEl = [];\n    for (let i = 1; i <= columns; i++) {\n      columnsEl.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"constructor-container__row__el__section\",\n        children: [/*#__PURE__*/_jsxDEV(SettingOutlined, {\n          style: {\n            marginLeft: '15px',\n            marginTop: '15px',\n            fontSize: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"constructor-container__row__el__section__inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            children: [\"x:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"constructor-container__row__el__section__input\",\n              value: `${layout[i].w}`,\n              onChange: e => handleLayoutX(e, i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"y:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"constructor-container__row__el__section__input\",\n              value: `${layout[i].h}`,\n              onChange: e => handleLayoutX(e, i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this));\n    }\n    return columnsEl;\n  };\n  const addColumn = () => {\n    if (columns < 3) {\n      setColumns(prev => prev + 1);\n      const newValue = {\n        id: idGen(row + 1, columns + 1),\n        x: columns,\n        y: row,\n        w: 1,\n        h: 1\n      };\n      setLayout({\n        ...layout,\n        [columns + 1]: newValue\n      });\n    }\n  };\n  const removeColumn = () => {\n    if (columns > 1) {\n      setColumns(prev => prev - 1);\n      setLayout({\n        ...layout,\n        [columns]: ''\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"constructor-container__row\",\n    children: [/*#__PURE__*/_jsxDEV(PlusCircleOutlined, {\n      style: {\n        alignSelf: 'center',\n        fontSize: '30px',\n        cursor: 'pointer'\n      },\n      onClick: () => addColumn()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n      style: {\n        alignSelf: 'center',\n        fontSize: '30px',\n        cursor: 'pointer',\n        marginLeft: '5px'\n      },\n      onClick: () => removeColumn()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"constructor-container__row__el\",\n      style: gridLayoutStyle,\n      children: renderColumns()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(ConstructorRowEl, \"iY8AHKN3HnEwi1JTpPMUEi4R0vw=\");\n_c = ConstructorRowEl;\nexport default ConstructorRowEl;\nvar _c;\n$RefreshReg$(_c, \"ConstructorRowEl\");","map":{"version":3,"names":["PlusCircleOutlined","MinusCircleOutlined","SettingOutlined","useEffect","useState","jsxDEV","_jsxDEV","ConstructorRowEl","row","_s","columns","setColumns","idGen","r","c","String","layout","setLayout","id","x","y","w","h","gridLayoutStyle","setGridLayoutStyle","gridTemplateColumns","gridStyle","Object","values","map","el","join","console","log","handleLayoutX","e","i","newValue","Ne","target","value","renderColumns","columnsEl","push","className","children","style","marginLeft","marginTop","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onChange","addColumn","prev","removeColumn","alignSelf","cursor","onClick","_c","$RefreshReg$"],"sources":["/Users/ns/Documents/code/Constructor/sections-manager/src/ConstructorRowEl/ConstructorRowEl.jsx"],"sourcesContent":["import './ConstructorRowEl.scss';\n\nimport { PlusCircleOutlined, MinusCircleOutlined, SettingOutlined } from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\n\n\n\nconst ConstructorRowEl = ({ row }) => {\n\n    const [ columns, setColumns ] = useState(1);\n\n    const idGen = (r, c) => {\n        return String(r) + String(c);\n    }\n\n    const [ layout, setLayout ] = useState({\n        1: {id: idGen(row + 1, 1),x: columns - 1, y: row, w: 1, h: 1},\n    })\n\n    const [ gridLayoutStyle, setGridLayoutStyle ] = useState({gridTemplateColumns: '1fr'});\n\n\n    useEffect(() => {\n        const gridStyle = {gridTemplateColumns: Object.values(layout).map(el => {\n            if(el.w) {\n                return String(el.w) + 'fr';\n            } else {\n                return '';\n            }\n        }).join(' ')};\n        setGridLayoutStyle(gridStyle);\n        console.log(layout);\n    }, [columns, layout])\n\n    const handleLayoutX = (e, i) => {\n        setLayout(layout => {\n            const newValue = {...layout[i], w: Ne.target.value, h: 1}\n            return ({...layout, [i]: newValue})\n        })\n    }\n\n    const renderColumns = () => {\n        let columnsEl = [];\n        for (let i = 1; i <= columns; i ++) {\n            columnsEl.push((\n                <div key = {i} className=\"constructor-container__row__el__section\">\n                    <SettingOutlined style={{marginLeft: '15px', marginTop: '15px', fontSize: '20px'}}/>\n                    <div className='constructor-container__row__el__section__inputs'>\n                        <lable>\n                        x:\n                            <input \n                                className='constructor-container__row__el__section__input' \n                                value={`${layout[i].w}`}\n                                onChange={(e) => handleLayoutX(e, i)}>    \n                            </input>\n                            </lable>\n                        <label>\n                        y:\n                            <input \n                                className='constructor-container__row__el__section__input' \n                                value={`${layout[i].h}`}\n                                onChange={(e) => handleLayoutX(e, i)}>    \n                            </input>\n                        </label>\n                    </div>\n                </div>\n            ))\n        }\n        return columnsEl;\n    }\n\n    const addColumn = () => {\n        if (columns < 3) {\n            setColumns(prev => prev + 1)\n            const newValue = {id: idGen(row + 1, columns + 1),x: columns, y: row, w: 1, h: 1};\n            setLayout({...layout, [columns+1]: newValue})   \n        }\n    }\n\n    const removeColumn = () => {\n        if (columns > 1) {\n            setColumns(prev => prev - 1)\n            setLayout({...layout, [columns]: ''})  \n        } \n    }\n\n    return (\n        <div className='constructor-container__row'>\n            <PlusCircleOutlined \n                        style={{alignSelf: 'center', fontSize: '30px', cursor: 'pointer'}}\n                        onClick={() => addColumn()}/>\n            <MinusCircleOutlined \n                style={{alignSelf: 'center', fontSize: '30px', cursor: 'pointer', marginLeft: '5px'}}\n                onClick={() => removeColumn()}/>\n            <div className=\"constructor-container__row__el\" style={gridLayoutStyle}>\n                {renderColumns()}\n            </div>\n        </div>\n    );\n}\n\nexport default ConstructorRowEl;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}