{"ast":null,"code":"var _jsxFileName = \"/Users/ns/Documents/code/Constructor/sections-manager/src/SectionsManager/SectionsManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./SectionsManager.scss\";\nimport { PlusCircleOutlined, MinusOutlined } from '@ant-design/icons';\nimport Constructor from \"../Constructor/Constructor\";\nimport SettingsMenu from \"../SettingsMenu/SettingsMenu\";\nimport { SectionsManagerContext } from './SectionsManagerContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SectionsManager = () => {\n  _s();\n  const [rows, setRows] = useState(1);\n  const [settingstMenuOpened, setSettingsMenuOpened] = useState(false);\n  const [curId, setCurId] = useState(null);\n  const [layoutDate, setLayoutDate] = useState({\n    1: [{\n      i: 11,\n      x: 0,\n      y: 0,\n      w: 1,\n      h: 1\n    }]\n  });\n  const [name, setName] = useState('');\n  useEffect(() => {\n    // const childrenLayout = Object.values(layoutDate).map(el => el);\n    console.log(layoutDate);\n    sectionData();\n  }, [layoutDate]);\n  const sectionData = () => {\n    const arr = [];\n    const data = Object.values(layoutDate);\n    for (let i = 0; i < data.length; i++) {\n      arr.push(...data[i]);\n    }\n    const filteredArr = arr.filter(el => el.name);\n    const elements = filteredArr.map(el => ({\n      name: el.name,\n      layout: {\n        i: el.i,\n        x: el.x,\n        y: el.y,\n        w: el.w,\n        h: el.h\n      }\n    }));\n    const section = {\n      name,\n      children: elements\n    };\n    console.log(section);\n  };\n  const editRowDate = (row, date) => {\n    setLayoutDate(layoutDate => ({\n      ...layoutDate,\n      [row]: date\n    }));\n  };\n  const removeRowDate = row => {\n    const obj = JSON.parse(JSON.stringify(layoutDate));\n    delete obj[row];\n    setLayoutDate(obj);\n  };\n  const handleSettingsMenu = id => {\n    if (id) {\n      setCurId(id);\n      setSettingsMenuOpened(true);\n    } else {\n      setSettingsMenuOpened(prev => !prev);\n    }\n  };\n  const handleName = e => {\n    setName(e.target.value);\n  };\n  const handleElementType = (name, r, w) => {\n    const id = String(r) + w;\n    const prevRow = layoutDate[r];\n    const idxInRow = prevRow.findIndex(el => {\n      return el.i === id;\n    });\n    prevRow[idxInRow].name = name.label;\n    const newRow = [...prevRow];\n    setLayoutDate(layoutDate => ({\n      ...layoutDate,\n      [r]: newRow\n    }));\n  };\n  // --------------\n\n  // -------------------------\n\n  const addRow = () => {\n    if (rows < 5) {\n      setRows(prev => prev + 1);\n      const id = String(rows + 1) + 1;\n      setLayoutDate(layout => {\n        return {\n          ...layout,\n          [rows + 1]: [{\n            i: id,\n            x: 0,\n            y: rows,\n            w: 1,\n            h: 1\n          }]\n        };\n      });\n    }\n  };\n  const removeRow = () => {\n    if (rows > 1) {\n      setRows(prev => prev - 1);\n      const newLayoutDate = JSON.parse(JSON.stringify(layoutDate));\n      delete newLayoutDate[rows];\n      setLayoutDate(newLayoutDate);\n    }\n  };\n  // -------------------------\n\n  return /*#__PURE__*/_jsxDEV(SectionsManagerContext.Provider, {\n    value: {\n      layoutDate,\n      handleSettingsMenu,\n      editRowDate,\n      removeRowDate,\n      handleElementType\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manager-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manager-container__tools-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"manager-container__tools-menu__title\",\n          children: \"Tools bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"manager-container__tools-menu__btn\",\n          onClick: () => addRow(),\n          children: [/*#__PURE__*/_jsxDEV(PlusCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"manager-container__tools-menu__btn\",\n          onClick: () => removeRow(),\n          children: [/*#__PURE__*/_jsxDEV(MinusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), settingstMenuOpened ? /*#__PURE__*/_jsxDEV(SettingsMenu, {\n          id: curId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 44\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manager-container__workspace\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"manager-container__workspace__title-input\",\n          onChange: e => handleName(e),\n          value: name,\n          placeholder: \"Section Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Constructor, {\n          rows: rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\",\n          children: \"Save section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(SectionsManager, \"kRhaL9QhyztpQJpHW0IF99fRmso=\");\n_c = SectionsManager;\nexport default SectionsManager;\nvar _c;\n$RefreshReg$(_c, \"SectionsManager\");","map":{"version":3,"names":["React","useEffect","useState","PlusCircleOutlined","MinusOutlined","Constructor","SettingsMenu","SectionsManagerContext","jsxDEV","_jsxDEV","SectionsManager","_s","rows","setRows","settingstMenuOpened","setSettingsMenuOpened","curId","setCurId","layoutDate","setLayoutDate","i","x","y","w","h","name","setName","console","log","sectionData","arr","data","Object","values","length","push","filteredArr","filter","el","elements","map","layout","section","children","editRowDate","row","date","removeRowDate","obj","JSON","parse","stringify","handleSettingsMenu","id","prev","handleName","e","target","value","handleElementType","r","String","prevRow","idxInRow","findIndex","label","newRow","addRow","removeRow","newLayoutDate","Provider","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/ns/Documents/code/Constructor/sections-manager/src/SectionsManager/SectionsManager.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport \"./SectionsManager.scss\";\n\nimport { PlusCircleOutlined, MinusOutlined } from '@ant-design/icons'\nimport Constructor from \"../Constructor/Constructor\";\nimport SettingsMenu from \"../SettingsMenu/SettingsMenu\";\n\nimport { SectionsManagerContext } from './SectionsManagerContext';\n\nconst SectionsManager = () => {\n    \n    const [ rows, setRows] = useState(1);\n\n    const [ settingstMenuOpened, setSettingsMenuOpened ] = useState(false);\n\n    const [ curId, setCurId ] = useState(null);\n\n    const [ layoutDate, setLayoutDate ] = useState({\n        1: [{i: 11, x: 0, y: 0, w: 1, h: 1}]\n    });\n\n    const [ name, setName ] = useState('');\n\n\n    useEffect(() => {\n        // const childrenLayout = Object.values(layoutDate).map(el => el);\n        console.log(layoutDate)\n        sectionData();\n    }, [layoutDate])\n\n    const sectionData = () => {\n        const arr = [];\n        const data = Object.values(layoutDate);\n        for (let i = 0; i < data.length; i++) {\n            arr.push(...data[i]);\n        }\n        const filteredArr = arr.filter(el => el.name)\n        const elements = filteredArr.map(el => ({\n            name: el.name,\n            layout: {\n                i: el.i,\n                x: el.x,\n                y: el.y,\n                w: el.w,\n                h: el.h\n            }\n        }))\n        const section = {\n            name,\n            children: elements\n        }\n        console.log(section)\n    }\n\n    const editRowDate = (row, date) => {\n        setLayoutDate(layoutDate => ({...layoutDate, [row]: date}))\n    }\n\n    const removeRowDate = (row) => {\n        const obj = JSON.parse(JSON.stringify(layoutDate));\n        delete obj[row];\n        setLayoutDate(obj)\n    }\n\n    const handleSettingsMenu = (id) => {\n        if (id) {\n            setCurId(id)\n            setSettingsMenuOpened(true);\n        } else {\n            setSettingsMenuOpened(prev => !prev);\n        }\n    };\n\n    const handleName = (e) => {\n        setName(e.target.value)\n    }\n\n    const handleElementType = (name, r, w) => {\n        const id = String(r) + w;\n        const prevRow = layoutDate[r];\n        const idxInRow = prevRow.findIndex((el) => { return el.i === id });\n        prevRow[idxInRow].name = name.label;\n        const newRow = [...prevRow]\n        setLayoutDate(layoutDate => ({...layoutDate, [r]: newRow}));\n    };\n    // --------------\n\n\n\n    // -------------------------\n\n    const addRow = () => {\n        if (rows < 5) {\n            setRows(prev => prev + 1);\n            const id = String(rows + 1) + 1;\n            setLayoutDate(layout => {\n                return ({...layout, [rows+1]: [{i: id, x: 0, y: rows, w: 1, h: 1}]})\n            })\n        }\n    }\n\n    const removeRow = () => {\n        if (rows > 1) {\n            setRows(prev => prev - 1);\n            const newLayoutDate = JSON.parse(JSON.stringify(layoutDate));\n            delete newLayoutDate[rows]\n            setLayoutDate(newLayoutDate)\n        }\n    }\n// -------------------------\n\n    return (\n        <SectionsManagerContext.Provider value={{layoutDate, handleSettingsMenu, editRowDate, removeRowDate, handleElementType}}>\n            <div className=\"manager-container\">\n                <div className=\"manager-container__tools-menu\">\n                    <span className=\"manager-container__tools-menu__title\">Tools bar</span>\n                    <label \n                        className=\"manager-container__tools-menu__btn\"\n                        onClick={() => addRow()}>\n                        <PlusCircleOutlined />\n                        <span>Add row</span>\n                    </label>\n                    <label \n                        className=\"manager-container__tools-menu__btn\"\n                        onClick={() => removeRow()}>\n                        <MinusOutlined />\n                        <span>Remove</span>\n                    </label>\n                    {settingstMenuOpened ? <SettingsMenu id={curId}/> : null}\n                </div>\n                <div className=\"manager-container__workspace\">\n                    <input \n                        className=\"manager-container__workspace__title-input\" \n                        onChange={(e) => handleName(e)}\n                        value={name}\n                        placeholder=\"Section Name\">  \n                    </input>\n                    <Constructor  rows={rows}/>\n                    <button className=\"\">Save section</button>\n                </div>\n            </div>\n        </SectionsManagerContext.Provider>\n    );\n};\n\n\nexport default SectionsManager;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}