{"ast":null,"code":"var _jsxFileName = \"/Users/ns/Documents/code/Constructor/sections-manager/src/ConstructorRowEl/ConstructorRowEl.jsx\",\n  _s = $RefreshSig$();\nimport './ConstructorRowEl.scss';\nimport { PlusCircleOutlined, MinusCircleOutlined, SettingOutlined } from '@ant-design/icons';\nimport { useContext, useEffect, useState } from 'react';\nimport { SectionsManagerContext } from '../SectionsManager/SectionsManagerContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConstructorRowEl = ({\n  row\n}) => {\n  _s();\n  const {\n    layoutDate,\n    handleSettingsMenu,\n    editRowDate,\n    removeRowDate\n  } = useContext(SectionsManagerContext);\n  const [columns, setColumns] = useState(1);\n  const idGen = (r, c) => {\n    return String(r) + String(c);\n  };\n  const [layout, setLayout] = useState({\n    1: {\n      i: idGen(row + 1, 1),\n      x: columns - 1,\n      y: row,\n      w: 1,\n      h: 1\n    }\n  });\n  const [gridLayoutStyle, setGridLayoutStyle] = useState({\n    gridTemplateColumns: '1fr',\n    gridTemplateRows: '1fr'\n  });\n  useEffect(() => {\n    const gridStyle = {\n      gridTemplateColumns: Object.values(layout).map(el => {\n        if (el.w) {\n          return String(el.w) + 'fr';\n        } else {\n          return '';\n        }\n      }).join(' ')\n    };\n    setGridLayoutStyle(gridStyle);\n    editRowDate(row + 1, Object.values(layout).filter(el => el.i));\n    return () => {\n      removeRowDate(row + 1);\n    };\n  }, [columns, layout]);\n  const handleLayoutX = (e, i) => {\n    setLayout(layout => {\n      const newValue = {\n        ...layout[i],\n        w: Number(e.target.value)\n      };\n      return {\n        ...layout,\n        [i]: newValue\n      };\n    });\n  };\n  const handleLayoutY = (e, i) => {\n    setLayout(layout => {\n      const newValue = {\n        ...layout[i],\n        h: Number(e.target.value)\n      };\n      return {\n        ...layout,\n        [i]: newValue\n      };\n    });\n  };\n  const renderColumns = () => {\n    let columnsEl = [];\n    const r = String(row + 1);\n    for (let i = 1; i <= columns; i++) {\n      columnsEl.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"constructor-container__row__el__section\",\n        children: [/*#__PURE__*/_jsxDEV(SettingOutlined, {\n          style: {\n            marginLeft: '15px',\n            marginTop: '15px',\n            fontSize: '20px'\n          },\n          onClick: () => handleSettingsMenu(r + i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: `${console.log(layoutDate)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"constructor-container__row__el__section__inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"x:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"constructor-container__row__el__section__input\",\n              value: `${layout[i].w}`,\n              onChange: e => handleLayoutX(e, i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"y:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"constructor-container__row__el__section__input\",\n              value: `${layout[i].h}`,\n              onChange: e => handleLayoutY(e, i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this));\n    }\n    return columnsEl;\n  };\n  const addColumn = () => {\n    if (columns < 3) {\n      setColumns(prev => prev + 1);\n      const newValue = {\n        i: idGen(row + 1, columns + 1),\n        x: columns,\n        y: row,\n        w: 1,\n        h: 1\n      };\n      setLayout({\n        ...layout,\n        [columns + 1]: newValue\n      });\n    }\n  };\n  const removeColumn = () => {\n    if (columns > 1) {\n      setColumns(prev => prev - 1);\n      setLayout({\n        ...layout,\n        [columns]: ''\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"constructor-container__row\",\n    children: [/*#__PURE__*/_jsxDEV(PlusCircleOutlined, {\n      style: {\n        alignSelf: 'center',\n        fontSize: '30px',\n        cursor: 'pointer'\n      },\n      onClick: () => addColumn()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n      style: {\n        alignSelf: 'center',\n        fontSize: '30px',\n        cursor: 'pointer',\n        marginLeft: '5px'\n      },\n      onClick: () => removeColumn()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"constructor-container__row__el\",\n      style: gridLayoutStyle,\n      children: renderColumns()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(ConstructorRowEl, \"XT+HaQFW4wnkvz4wlqtXUKX5AQg=\");\n_c = ConstructorRowEl;\nexport default ConstructorRowEl;\nvar _c;\n$RefreshReg$(_c, \"ConstructorRowEl\");","map":{"version":3,"names":["PlusCircleOutlined","MinusCircleOutlined","SettingOutlined","useContext","useEffect","useState","SectionsManagerContext","jsxDEV","_jsxDEV","ConstructorRowEl","row","_s","layoutDate","handleSettingsMenu","editRowDate","removeRowDate","columns","setColumns","idGen","r","c","String","layout","setLayout","i","x","y","w","h","gridLayoutStyle","setGridLayoutStyle","gridTemplateColumns","gridTemplateRows","gridStyle","Object","values","map","el","join","filter","handleLayoutX","e","newValue","Number","target","value","handleLayoutY","renderColumns","columnsEl","push","className","children","style","marginLeft","marginTop","fontSize","onClick","fileName","_jsxFileName","lineNumber","columnNumber","console","log","onChange","addColumn","prev","removeColumn","alignSelf","cursor","_c","$RefreshReg$"],"sources":["/Users/ns/Documents/code/Constructor/sections-manager/src/ConstructorRowEl/ConstructorRowEl.jsx"],"sourcesContent":["import './ConstructorRowEl.scss';\n\nimport { PlusCircleOutlined, MinusCircleOutlined, SettingOutlined } from '@ant-design/icons';\nimport { useContext, useEffect, useState } from 'react';\n\nimport { SectionsManagerContext } from '../SectionsManager/SectionsManagerContext';\n\nconst ConstructorRowEl = ({ row }) => {\n\n    const { layoutDate, handleSettingsMenu, editRowDate, removeRowDate } = useContext(SectionsManagerContext);\n\n    const [ columns, setColumns ] = useState(1);\n\n    const idGen = (r, c) => {\n        return String(r) + String(c);\n    }\n\n    const [ layout, setLayout ] = useState({\n        1: {i: idGen(row + 1, 1),x: columns - 1, y: row, w: 1, h: 1},\n    })\n\n    const [ gridLayoutStyle, setGridLayoutStyle ] = useState({gridTemplateColumns: '1fr', gridTemplateRows: '1fr'});\n\n\n    useEffect(() => {\n        const gridStyle = {gridTemplateColumns: Object.values(layout).map(el => {\n            if(el.w) {\n                return String(el.w) + 'fr';\n            } else {\n                return '';\n            }\n        }).join(' ')};\n        setGridLayoutStyle(gridStyle);\n        editRowDate(row + 1, Object.values(layout).filter(el => el.i))\n        return () => {\n            removeRowDate(row + 1)\n        }               \n    }, [columns, layout])\n\n    const handleLayoutX = (e, i) => {\n        setLayout(layout => {\n            const newValue = {...layout[i], w: Number(e.target.value)}\n            return ({...layout, [i]: newValue})\n        })\n    }\n\n    const handleLayoutY = (e, i) => {\n        setLayout(layout => {\n            const newValue = {...layout[i], h: Number(e.target.value)}\n            return ({...layout, [i]: newValue})\n        })\n    }\n\n    const renderColumns = () => {\n        let columnsEl = [];\n        const r = String(row + 1);\n        for (let i = 1; i <= columns; i ++) {\n            columnsEl.push((\n                <div key = {i} className=\"constructor-container__row__el__section\">\n                    <SettingOutlined \n                        style={{marginLeft: '15px', marginTop: '15px', fontSize: '20px'}}\n                        onClick={() => handleSettingsMenu(r + i)}/>\n                    <div>{`${console.log(layoutDate)}`}</div>\n                    <div className='constructor-container__row__el__section__inputs'>\n                        <label>\n                        x:\n                            <input \n                                className='constructor-container__row__el__section__input' \n                                value={`${layout[i].w}`}\n                                onChange={(e) => handleLayoutX(e, i)}>    \n                            </input>\n                        </label>\n                        <label>\n                        y:\n                            <input \n                                className='constructor-container__row__el__section__input' \n                                value={`${layout[i].h}`}\n                                onChange={(e) => handleLayoutY(e, i)}>    \n                            </input>\n                        </label>\n                    </div>\n                </div>\n            ))\n        }\n        return columnsEl;\n    }\n\n    const addColumn = () => {\n        if (columns < 3) {\n            setColumns(prev => prev + 1)\n            const newValue = {i: idGen(row + 1, columns + 1),x: columns, y: row, w: 1, h: 1};\n            setLayout({...layout, [columns+1]: newValue})   \n        }\n    }\n\n    const removeColumn = () => {\n        if (columns > 1) {\n            setColumns(prev => prev - 1)\n            setLayout({...layout, [columns]: ''})  \n        } \n    }\n\n    return (\n        <div className='constructor-container__row'>\n            <PlusCircleOutlined \n                        style={{alignSelf: 'center', fontSize: '30px', cursor: 'pointer'}}\n                        onClick={() => addColumn()}/>\n            <MinusCircleOutlined \n                style={{alignSelf: 'center', fontSize: '30px', cursor: 'pointer', marginLeft: '5px'}}\n                onClick={() => removeColumn()}/>\n            <div className=\"constructor-container__row__el\" style={gridLayoutStyle}>\n                {renderColumns()}\n            </div>\n        </div>\n    );\n}\n\nexport default ConstructorRowEl;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}